// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<VocabList/> should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <VocabList
    currentTopic="javascript"
    topics={
      Map {
        "javascript" => Map {
          "variables" => Map {
            "description" => "containers for storing values",
            "vocabulary" => Map {
              "var" => "This variable can be reassigned and redeclared. Function scoped.",
              "let" => "This variable can be reassigned but not re-declared. Block Scoped.",
              "const" => "This variable can not be reassigned and can not be accessed before they appear within the code.",
            },
          },
          "basic_data_types" => Map {
            "description" => "There are seven of these datatypes in Javascript",
            "vocabulary" => Map {
              "number" => "This basic datatype represents both integer and floating point numbers",
              "string" => "This basic datatype can be used to hold data that as text",
              "boolean" => "This datatype can only have two values, true/false",
              "null" => "This basic datatype represents the intentional abscence of a value",
              "undefined" => "This basic datatype represents an unassigned value or unintentional abscence of a value",
              "object" => "This basic datatype is used to store a collection of data",
              "symbol" => "This basic datatype can be used to create anonymous properties on objects",
            },
          },
          "arrays" => Map {
            "description" => "Holds iterable, ordered, collection of data",
            "vocabulary" => Map {
              "concat_(Array)" => "Join several arrays into one",
              "from" => "Creates new, shallow-copied instance from an array-like or iterable object",
              "isArray" => "Method determines whether the passed value is an Array",
              "copyWithin" => "Copies part of an array to another location in the same array and returns it, without modifying its size",
              "every" => "Method tests whether all elements in the array pass the test implemented by the provided function",
              "fill" => "Method fills all the elements of an array from a start index to an end index with a static value. The end index is not included",
              "filter" => "Method creates a new array with all elements that pass the test implemented by the provided function",
              "find" => "Method returns the value of the first element in the array that satisfies the provided testing function. Otherwise undefined is returned",
              "findIndex" => "Method returns the index of the first element in the array that satisfies the provided testing function. Otherwise, it returns -1",
              "forEach_(Array)" => "Method executes a provided function once for each array element",
              "includes_(Array)" => "Method determines whether an array includes a certain value among its entries, returning true or false as appropriate",
              "indexOf_(Array)" => "Method returns the first index at which a given element can be found in the array, or -1 if it is not present",
              "join" => "Method creates and returns a new string by concatenating all of the elements in an array-like object, separated by commas or a specified separator string.",
              "lastIndexOf_(Array)" => "Method returns the last index at which a given element can be found in the array, or -1 if it is not present",
              "map" => "Method creates a new array with the results of calling a provided function on every element in the calling array",
              "pop" => "Method removes the last element from an array and returns that element. This method changes the length of the array",
              "push" => "Method adds one or more elements to the end of an array and returns the new length of the array",
              "reduce" => "Method executes a reducer function (that you provide) on each member of the array resulting in a single output value",
              "reduceRight" => "Method applies a function against an accumulator and each value of the array (from right-to-left) to reduce it to a single value",
              "reverse" => "Method reverses an array in place. The first array element becomes the last, and the last array element becomes the first",
              "shift" => "Method removes the first element from an array and returns that removed element. This method changes the length of the array",
              "slice_(Array)" => "Method returns a copy of a portion of an array into a new array object selected from begin to end (end not included). The original array will not be modified",
              "some" => "Method tests whether at least one element in the array passes the test implemented by the provided function",
              "sort" => "Method sorts the elements of an array in place and returns the array",
              "splice" => "Method changes the contents of an array by removing or replacing existing elements and/or adding new elements",
              "unshift" => "Method adds one or more elements to the beginning of an array and returns the new length of the array",
            },
          },
          "number" => Map {
            "description" => "JavaScript object is a wrapper object allowing you to work with numerical values",
            "vocabulary" => Map {
              "isFinite" => "Method determines whether the passed value is a finite number",
              "isInteger" => "Method determines whether the passed value is an integer",
              "isNan" => "Method determines whether the passed value is NaN and its type is Number",
              "isSafeInteger" => "Method determines whether the provided value is a number that is a safe integer(a number between Â± 9 quadrillion) or if precision will be lost.",
              "parseFloat" => "Method parses a string argument and returns a floating point number",
              "parseInt" => "Method parses a string argument and returns an integer",
              "toExponential" => "Method returns a string representing the Number object in exponential notation",
              "toFixed" => "Method formats a number using fixed-point notation",
            },
          },
          "map" => Map {
            "description" => "Object holds key-value pairs and remembers the original insertion order of the keys. Any value (both objects and primitive values) may be used as either a key or a value.",
            "vocabulary" => Map {
              "clear_(Map)" => "Method removes all elements from a Map object",
              "delete_(Map)" => "Method removes the specified element from a Map object",
              "entries" => "Method returns a new Iterator object that contains the [key, value] pairs for each element in the Map object in insertion order",
              "forEach_(Map)" => "Method executes a provided function once per each key/value pair in the Map object, in insertion order",
              "get" => "Method returns a specified element from a Map object",
              "has_(Map)" => "Method returns a boolean indicating whether an element with the specified key exists or not",
              "keys" => "Method returns a new Iterator object that contains the keys for each element in the Map object in insertion order",
              "set" => "Method adds or updates an element with a specified key and value to a Map object.",
              "values" => "Method returns a new Iterator object that contains the values for each element in the Map object in insertion order",
            },
          },
          "string" => Map {
            "description" => "global object is a constructor for strings or a sequence of characters",
            "vocabulary" => Map {
              "fromCharCode" => "Method returns a string created from the specified sequence of UTF-16 code units",
              "fromCodePoint" => "Method returns a string created by using the specified sequence of code points",
              "charAt" => "Method returns a new string consisting of the single UTF-16 code unit located at the specified offset into the string",
              "charCodeAt" => "Method returns an integer between 0 and 65535 representing the UTF-16 code unit at the given index",
              "concat_(String)" => "Method concatenates the string arguments to the calling string and returns a new string",
              "endsWith" => "Method determines whether a string ends with the characters of a specified string, returning true or false as appropriate",
              "includes_(String)" => "Method determines whether one string may be found within another string, returning true or false as appropriate",
              "indexOf_(String)" => "Method returns the index within the calling String object of the first occurrence of the specified value, -1 otherwise",
              "lastIndexOf_(String)" => "Method returns the index within the calling String object of the last occurrence of the specified value",
              "match" => "Method retrieves the matches when matching a string against a regular expression",
              "padEnd" => "Method pads the end of the current string with a given string (repeated, if needed) so that the resulting string reaches a given length",
              "padStart" => "Method pads the start of the current string with a given string (repeated, if needed) so that the resulting string reaches a given length",
              "repeat" => "Method constructs and returns a new string which contains the specified number of copies of the string on which it was called, concatenated together",
              "replace" => "Method returns a new string with some or all matches of a pattern replaced by a replacement",
              "search" => "Method executes a search for a match between a regular expression and this String object",
              "slice_(String)" => "Method extracts a section of a string and returns it as a new string, without modifying the original string",
              "split" => "Method splits a String object into an array of strings by separating the string into substrings, using a specified separator string to determine where to make each split",
              "startsWith" => "Method determines whether a string begins with the characters of a specified string, returning true or false as appropriate",
              "substring" => "Method returns the part of the string between the start and end indexes, or to the end of the string",
              "trim" => "Method removes whitespace from both ends of a string",
            },
          },
          "set" => Map {
            "description" => "Object lets you store unique values of any type, whether primitive values or object references",
            "vocabulary" => Map {
              "size" => "Returns the number of elements in a Set object",
              "add" => "Method appends a new element with a specified value to the end of a Set object",
              "clear_(Set)" => "Method removes all elements from a Set object",
              "delete_(Set)" => "Method removes the specified element from  Set object",
              "has_(Set)" => "Method returns a boolean indicating whether an element with the specified value exists in a Set object or not",
            },
          },
          "arithmetic_operators" => Map {
            "description" => "take numerical values (either literals or variables) as their operands and return a single numerical value",
            "vocabulary" => Map {
              "addition" => "This operator returns the sum of numeric operands or string concatenation",
              "subtraction" => "This operator returns the difference between two numeric operands",
              "division" => "This operator returns the quotient of a divisor and a dividend",
              "multiplicaton" => "This operator returns the product of its operands",
              "remainder(%)" => "This operator returns the remainder between a divsor and dividend",
              "exponentiation" => "This operator returns the result of raising the first operand to the power of the second operand",
              "increment(++)" => "This operator increments its operand by one",
              "decrement" => "This operator decrements by one its operand",
              "unary_negation" => "This operator precedes its operand and negates it",
              "unary_plus" => "This operator precedes its operand and attempts to convert it into a number",
            },
          },
        },
        "cascading_style_sheets" => Map {
          "background" => Map {
            "description" => "A shorthand property for setting all background properties in one declaration",
            "vocabulary" => Map {
              "background-attachment" => Map {
                "description" => "Sets whether a background image is fixed or scrolls with the rest of the page",
                "values" => Map {
                  "0" => "scroll",
                  "1" => "fixed",
                },
              },
              "background-color" => Map {
                "description" => "Sets the background color of an element",
                "values" => Map {
                  "0" => "color-rgb",
                  "1" => "color-hex",
                  "2" => "color-name",
                  "3" => "transparent",
                },
              },
              "background-image" => Map {
                "description" => "Sets an image as the background",
                "values" => Map {
                  "0" => "url",
                  "1" => "none",
                },
              },
              "background-position" => Map {
                "description" => "Sets the starting position of a background image",
                "values" => Map {
                  "0" => "top left",
                  "1" => "top center",
                  "2" => "top right",
                  "3" => "center left",
                  "4" => "center center",
                  "5" => "center right",
                  "6" => "bottom left",
                  "7" => "bottom center",
                  "8" => "bottom right",
                  "9" => "x% y%",
                  "10" => "xpos ypos",
                },
              },
              "background-repeat" => Map {
                "description" => "Sets if/how a background image will be repeated",
                "values" => Map {
                  "0" => "repeat",
                  "1" => "repeat-x",
                  "2" => "repeat-y",
                  "3" => "no-repeat",
                },
              },
            },
          },
          "border" => Map {
            "description" => "A shorthand property for setting all of the properties for the four borders in one declaration",
            "vocabulary" => Map {
              "border-bottom" => Map {
                "description" => "A shorthand property for setting all of the properties for the bottom border in one declaration",
                "values" => Map {
                  "0" => "border-bottom-width",
                  "1" => "border-width",
                  "2" => "border-style",
                  "3" => "border-color",
                },
              },
              "border-bottom-color" => Map {
                "description" => "Sets the color of the bottom border",
                "values" => Map {
                  "0" => "Any hex, rgb, or named color on https://www.w3schools.com/colors/colors_names.asp",
                },
              },
              "border-bottom-style" => Map {
                "description" => "Sets the style of the bottom border",
                "values" => Map {
                  "0" => "none",
                  "1" => "dotted",
                  "2" => "inset",
                  "3" => "dashed solid",
                  "4" => "dashed double none",
                  "5" => "dashed groove none dotted",
                },
              },
              "border-bottom-width" => Map {
                "description" => "Sets the width of the bottom border",
                "values" => Map {
                  "0" => "thin",
                  "1" => "medium",
                  "2" => "thick",
                  "3" => "length",
                },
              },
              "border-color" => Map {
                "description" => "Sets the color of the four borders, can have from oen to four colors",
                "values" => Map {
                  "0" => "Any hex, rgb, or named color on https://www.w3schools.com/colors/colors_names.asp",
                },
              },
              "border-left" => Map {
                "description" => "A shorthand property for setting all of the properties for the left border in one declaration",
                "values" => Map {
                  "0" => "border-left-width",
                  "1" => "border",
                },
              },
              "border-left-color" => Map {
                "description" => "Sets the color of the left border",
                "values" => Map {
                  "0" => "border-left-width",
                  "1" => "border-style",
                  "2" => "border-color",
                },
              },
              "border-left-style" => Map {
                "description" => "Sets the style of the left border",
                "values" => Map {
                  "0" => "border-style",
                },
              },
              "border-left-width" => Map {
                "description" => "Sets the width",
                "values" => Map {
                  "0" => "Sets the width of the left border",
                },
              },
              "border-right" => Map {
                "description" => "A shorthand property for setting all of the properties for the right border in one declaration",
                "values" => Map {
                  "0" => "border-right-width",
                  "1" => "border-style",
                  "2" => "border-color",
                },
              },
              "border-right-color" => Map {
                "description" => "Sets the color of the right border",
                "values" => Map {
                  "0" => "border-color",
                },
              },
              "border-right-width" => Map {
                "description" => "Sets the width of the right border",
                "values" => Map {
                  "0" => "thin, medium, thick, length",
                },
              },
              "border-style" => Map {
                "description" => "Sets the style of the four borders, can have from one to four styles",
                "values" => Map {
                  "0" => "none",
                  "1" => "hidden",
                  "2" => "dotted",
                  "3" => "dashed",
                  "4" => "solid",
                  "5" => "double",
                  "6" => "groove",
                  "7" => "ridge",
                  "8" => "inset",
                  "9" => "outset",
                },
              },
              "border-top" => Map {
                "description" => "A shorthand property for setting all of the properties for the top border in one declaration",
                "values" => Map {
                  "0" => "border-top-width",
                  "1" => "width",
                  "2" => "border-style",
                  "3" => "border-color",
                },
              },
              "border-top-color" => Map {
                "description" => "Sets the color of the top border",
                "values" => Map {
                  "0" => "border-color",
                },
              },
              "border-top-style" => Map {
                "description" => "Sets the color of the top border",
                "values" => Map {
                  "0" => "border-style",
                },
              },
              "border-top-width" => Map {
                "description" => "Sets the width of the top border",
                "values" => Map {
                  "0" => "thin",
                  "1" => "medium",
                  "2" => "thick",
                  "3" => "length",
                },
              },
              "border-width" => Map {
                "description" => "A shorthand property for setting the width of the four borders in one declaration, can have from one to four values",
                "values" => Map {
                  "0" => "thin",
                  "1" => "medium",
                  "2" => "thick",
                  "3" => "length",
                },
              },
            },
          },
          "classification" => Map {
            "description" => "These type of properties allow you to specify how and where to display an element",
            "vocabulary" => Map {
              "clear" => Map {
                "description" => "Sets the sides of an element where other floating elements are not allowed",
                "values" => Map {
                  "0" => "left",
                  "1" => "right",
                  "2" => "both",
                  "3" => "none",
                },
              },
              "cursor" => Map {
                "description" => "Specifies the type of cursor to be displayed",
                "values" => Map {
                  "0" => "url",
                  "1" => "auto",
                  "2" => "crosshair",
                  "3" => "default",
                  "4" => "pointer",
                  "5" => "move",
                  "6" => "e-resize",
                  "7" => "ne-resize",
                  "8" => "nw-resize",
                  "9" => "n-resize",
                  "10" => "se-resize",
                  "11" => "sw-resize",
                  "12" => "s-resize",
                  "13" => "w-resize",
                  "14" => "text",
                  "15" => "wait",
                  "16" => "help",
                },
              },
              "display" => Map {
                "description" => "Sets how/if an element is displayed",
                "values" => Map {
                  "0" => "none",
                  "1" => "inline",
                  "2" => "block",
                  "3" => "list-item",
                  "4" => "run-in",
                  "5" => "compact",
                  "6" => "marker",
                  "7" => "table",
                  "8" => "inline-table",
                  "9" => "table-row-group",
                  "10" => "table-header-group",
                  "11" => "table-footer-group",
                  "12" => "table-row",
                  "13" => "table-column-group",
                  "14" => "table-column",
                  "15" => "table-cell",
                  "16" => "table-caption",
                },
              },
              "float" => Map {
                "description" => "Sets where an image or a text will appear in another element",
                "values" => Map {
                  "0" => "left",
                  "1" => "right",
                  "2" => "none",
                },
              },
              "position" => Map {
                "description" => "Places an element in a static, relative, absolute, or fixed position",
                "values" => Map {
                  "0" => "static",
                  "1" => "relative",
                  "2" => "absolute",
                  "3" => "fixed",
                },
              },
              "visibility" => Map {
                "description" => "Sets if an element should be visible or invisible",
                "values" => Map {
                  "0" => "visible",
                  "1" => "hidden",
                  "2" => "collapse",
                },
              },
            },
          },
          "dimension" => Map {
            "description" => "These type of properties allow you to specify size and space an element takes up",
            "vocabulary" => Map {
              "height" => Map {
                "description" => "Sets the height of an element",
                "values" => Map {
                  "0" => "auto",
                  "1" => "length",
                  "2" => "%",
                },
              },
              "line-height" => Map {
                "description" => "Sets the distance between lines",
                "values" => Map {
                  "0" => "normal",
                  "1" => "number",
                  "2" => "length",
                  "3" => "%",
                },
              },
              "max-height" => Map {
                "description" => "Sets the maximum height of an element",
                "values" => Map {
                  "0" => "none",
                  "1" => "length",
                  "2" => "%",
                },
              },
              "max-width" => Map {
                "description" => "Sets the maximum width of an element",
                "values" => Map {
                  "0" => "none",
                  "1" => "length",
                  "2" => "%",
                },
              },
              "min-height" => Map {
                "description" => "Sets the minimum height of an element",
                "values" => Map {
                  "0" => "length",
                  "1" => "%",
                },
              },
              "min-width" => Map {
                "description" => "Sets the minimum width of an element",
                "values" => Map {
                  "0" => "length",
                  "1" => "%",
                },
              },
              "width" => Map {
                "description" => "Sets the width of an element",
                "values" => Map {
                  "0" => "auto",
                  "1" => "length",
                  "2" => "%",
                },
              },
            },
          },
          "font" => Map {
            "description" => "properties for manipulating font of text",
            "vocabulary" => Map {
              "font" => Map {
                "description" => "A shorthand property for setting all of the properties for a font in one declaration",
                "values" => Map {
                  "0" => "font-style",
                  "1" => "font-variant",
                  "2" => "font-weight",
                  "3" => "font-size/line-height",
                  "4" => "font-family",
                  "5" => "caption",
                  "6" => "icon",
                  "7" => "menu",
                  "8" => "message-box",
                  "9" => "small-caption",
                  "10" => "status-bar",
                },
              },
              "font-family" => Map {
                "description" => "A prioritized list of font family names and/or generic family names for an element",
                "values" => Map {
                  "0" => "family-name",
                  "1" => "generic-family",
                },
              },
              "font-size" => Map {
                "description" => "Sets the size of a font",
                "values" => Map {
                  "0" => "xx-small",
                  "1" => "x-small",
                  "2" => "small",
                  "3" => "medium",
                  "4" => "large",
                  "5" => "x-large",
                  "6" => "xx-large",
                  "7" => "smaller",
                  "8" => "larger",
                  "9" => "length",
                  "10" => "%",
                },
              },
              "font-size-adjust" => Map {
                "description" => "Specifies an aspect value for an element that will preserve the x-height of the first-choice font",
                "values" => Map {
                  "0" => "none",
                  "1" => "number",
                },
              },
              "font-stretch" => Map {
                "description" => "Condenses or expands the current font-family",
                "values" => Map {
                  "0" => "normal",
                  "1" => "wider",
                  "2" => "narrower",
                  "3" => "ultra-condensed",
                  "4" => "extra-condensed",
                  "5" => "condensed",
                  "6" => "semi-condensed",
                  "7" => "semi-expanded",
                  "8" => "expanded",
                  "9" => "extra-expanded",
                  "10" => "ultra-expanded",
                },
              },
              "font-style" => Map {
                "description" => "Sets the style of the font",
                "values" => Map {
                  "0" => "normal",
                  "1" => "italic",
                  "2" => "oblique",
                },
              },
              "font-variant" => Map {
                "description" => "Displays text in a small-caps font or a normal font",
                "values" => Map {
                  "0" => "normal",
                  "1" => "small-caps",
                },
              },
              "font-weight" => Map {
                "description" => "Sets the weight of a font",
                "values" => Map {
                  "0" => "normal",
                  "1" => "bold",
                  "2" => "bolder",
                  "3" => "lighter",
                  "4" => "100",
                  "5" => "200",
                  "6" => "300",
                  "7" => "400",
                  "8" => "500",
                  "9" => "600",
                  "10" => "700",
                  "11" => "800",
                  "12" => "900",
                },
              },
            },
          },
          "generated_content" => Map {
            "description" => " text/image content that is added to a document via css psuedo-elements",
            "vocabulary" => Map {
              "content" => Map {
                "description" => "Generates content in a document. Used with the ::before and ::after pseudo-elements",
                "values" => Map {
                  "0" => "string",
                  "1" => "url",
                  "2" => "counter(name)",
                  "3" => "counter(name, list-style-type",
                  "4" => "counters(name, string)",
                  "5" => "counters(name,string,list-style-type",
                },
              },
              "counter-increment" => Map {
                "description" => "Sets how much the counter increments on each occurrence of a selector",
                "values" => Map {
                  "0" => "none",
                  "1" => "identifier",
                  "2" => "number",
                },
              },
              "counter-reset" => Map {
                "description" => "Sets the value the counter is set to on each occurrence of a selector",
                "values" => Map {
                  "0" => "none",
                  "1" => "identifier",
                  "2" => "number",
                },
              },
              "quotes" => Map {
                "description" => "Sets the type of quotation marks",
                "values" => Map {
                  "0" => "none",
                  "1" => "string string",
                },
              },
            },
          },
          "list_and_marker" => Map {
            "description" => "properties that style lists",
            "vocabulary" => Map {
              "list-style" => Map {
                "description" => "A shorthand property for setting all of the properties for a list in one declaration",
                "values" => "list-style-type",
              },
              "list-style-image" => Map {
                "description" => "Sets an image as the list-item marker",
                "values" => Map {
                  "0" => "none",
                  "1" => "url",
                },
              },
              "list-style-position" => Map {
                "description" => "Sets where the list-item marker is placed in the list",
                "values" => Map {
                  "0" => "inside",
                  "1" => "outside",
                },
              },
              "list-style-type" => Map {
                "description" => "Sets the type of the list-item marker",
                "values" => Map {
                  "0" => "none",
                  "1" => "disc",
                  "2" => "circle",
                  "3" => "square",
                  "4" => "decimal",
                  "5" => "decimal-leading-zero",
                  "6" => "lower-roman",
                  "7" => "upper-roman",
                  "8" => "lower-alpha",
                  "9" => "upper-alpha",
                  "10" => "lower-greek",
                  "11" => "lower-latin",
                  "12" => "upper-latin",
                  "13" => "hebrew",
                  "14" => "armenian",
                  "15" => "georgian",
                  "16" => "cjk-ideographic",
                  "17" => "hiragana",
                  "18" => "katakana",
                  "19" => "hiragana-iroha",
                  "20" => "katakana-iroha",
                },
              },
              "marker-offset" => Map {
                "description" => "defines the distance between the nearest border edges of a marker and its associated principal box",
                "values" => Map {
                  "0" => "auto",
                  "1" => "length",
                },
              },
            },
          },
          "margin" => Map {
            "description" => "properties that manipulate the margin of an element",
            "vocabulary" => Map {
              "margin" => Map {
                "description" => "A shorthand property for setting the margin properties in one declaration",
                "values" => Map {
                  "0" => "margin-top",
                  "1" => "margin-right",
                  "2" => "margin-bottom",
                  "3" => "margin-left",
                },
              },
              "margin-bottom" => Map {
                "description" => "Sets the bottom margin of an element",
                "values" => Map {
                  "0" => "auto",
                  "1" => "length",
                  "2" => "%",
                },
              },
              "margin-left" => Map {
                "description" => "Sets the left margin of an element",
                "values" => Map {
                  "0" => "auto",
                  "1" => "length",
                  "2" => "%",
                },
              },
              "margin-right" => Map {
                "description" => "Sets the right margin of an element",
                "values" => Map {
                  "0" => "auto",
                  "1" => "length",
                  "2" => "%",
                },
              },
              "margin-top" => Map {
                "description" => "Sets the top margin of an element",
                "values" => Map {
                  "0" => "auto",
                  "1" => "length",
                  "2" => "%",
                },
              },
            },
          },
          "outlines" => Map {
            "description" => "properties that change the outline style of elements",
            "vocabulary" => Map {
              "outline" => Map {
                "description" => "A shorthand property for setting all the outline properties in one declaration",
                "values" => Map {
                  "0" => "outline-color",
                  "1" => "outline-style",
                  "2" => "outline-width",
                },
              },
              "outline-color" => Map {
                "description" => "Sets the color of the outline around an element",
                "values" => Map {
                  "0" => "color",
                  "1" => "invert",
                },
              },
              "outline-style" => Map {
                "description" => "Sets the style of the outline around an element",
                "values" => Map {
                  "0" => "none",
                  "1" => "dotted",
                  "2" => "dashed",
                  "3" => "solid",
                  "4" => "double",
                  "5" => "groove",
                  "6" => "ridge",
                  "7" => "inset",
                  "8" => "outset",
                },
              },
              "outline-width" => Map {
                "description" => "Sets the width of the outline around an element",
                "values" => Map {
                  "0" => "thin",
                  "1" => "medium",
                  "2" => "thick",
                  "3" => "length",
                },
              },
            },
          },
          "padding" => Map {
            "description" => "properties that manipulate the padding of elements",
            "vocabulary" => Map {
              "padding" => Map {
                "description" => "A shorthand property for setting all of the padding properties in one declaration",
                "values" => Map {
                  "0" => "padding-top",
                  "1" => "padding-right",
                  "2" => "padding-bottom",
                  "3" => "padding-left",
                },
              },
              "padding-bottom" => Map {
                "description" => "Sets the bottom padding of an element",
                "values" => Map {
                  "0" => "length",
                  "1" => "%",
                },
              },
              "padding-left" => Map {
                "description" => "Sets the left padding of an element",
                "values" => Map {
                  "0" => "length",
                  "1" => "%",
                },
              },
              "padding-right" => Map {
                "description" => "Sets the right padding of an element",
                "values" => Map {
                  "0" => "length",
                  "1" => "%",
                },
              },
              "padding-top" => Map {
                "description" => "Sets the top padding of an element",
                "values" => Map {
                  "0" => "length",
                  "1" => "%",
                },
              },
            },
          },
          "positioning" => Map {
            "description" => "properties that adjust positioning and overflow of elements",
            "vocabulary" => Map {
              "bottom" => Map {
                "description" => "Sets how far the bottom edge of an element is above/below the bottom edge of the parent element",
                "values" => Map {
                  "0" => "auto",
                  "1" => "%",
                  "2" => "length",
                },
              },
              "clip" => Map {
                "description" => "Sets the shape of an element. The element is clipped into this shape, and displayed",
                "values" => Map {
                  "0" => "shape",
                  "1" => "auto",
                },
              },
              "left" => Map {
                "description" => "Sets how far the left edge of an element is to the right/left of the left edge of the parent element",
                "values" => Map {
                  "0" => "auto",
                  "1" => "%",
                  "2" => "length",
                },
              },
              "right" => Map {
                "description" => "Sets how far the right edge of an element is to the left/right of the right edge of the parent element",
                "values" => Map {
                  "0" => "auto",
                  "1" => "%",
                  "2" => "length",
                },
              },
              "overflow" => Map {
                "description" => "Sets what happens if the content of an element overflow its area",
                "values" => Map {
                  "0" => "visible",
                  "1" => "hidden",
                  "2" => "scroll",
                  "3" => "auto",
                },
              },
              "position" => Map {
                "description" => "Places an element in a static, relative, absolute, or fixed position",
                "values" => Map {
                  "0" => "static",
                  "1" => "relative",
                  "2" => "absolute",
                  "3" => "fixed",
                },
              },
              "top" => Map {
                "description" => "Sets how far the top edge of an element is above/below the top edge of the parent element",
                "values" => Map {
                  "0" => "auto",
                  "1" => "static",
                  "2" => "%",
                },
              },
              "vertical-align" => Map {
                "description" => "Sets the vertical alignment of an element",
                "values" => Map {
                  "0" => "baseline",
                  "1" => "sub",
                  "2" => "super",
                  "3" => "top",
                  "4" => "text-top",
                  "5" => "middle",
                  "6" => "bottom",
                  "7" => "text-bottom",
                  "8" => "length",
                  "9" => "%",
                },
              },
              "z-index" => Map {
                "description" => "Sets the stack order of an element",
                "values" => Map {
                  "0" => "auto",
                  "1" => "number",
                },
              },
            },
          },
          "table" => Map {
            "description" => "propeties that manipulate table elements",
            "vocabulary" => Map {
              "border-collapse" => Map {
                "description" => "Sets whether the table borders are collapsed into a single border or detached as in standard HTML",
                "values" => Map {
                  "0" => "collapse",
                  "1" => "separate",
                },
              },
              "border-spacing" => Map {
                "description" => "Sets the distance that separates cell borders (only for the âseparated bordersâ model)",
                "values" => Map {
                  "0" => "length",
                  "1" => "length",
                },
              },
              "caption-side" => Map {
                "description" => "Sets the position of the table caption",
                "values" => Map {
                  "0" => "top",
                  "1" => "bottom",
                  "2" => "left",
                  "3" => "right",
                },
              },
              "empty-cells" => Map {
                "description" => "Sets whether or not to show empty cells in a table (only for the âseparated bordersâ model)",
                "values" => Map {
                  "0" => "show",
                  "1" => "hide",
                },
              },
              "table-layout" => Map {
                "description" => "Sets the algorithm used to display the table cells, rows, and columns",
                "values" => Map {
                  "0" => "auto",
                  "1" => "fixed",
                },
              },
            },
          },
          "text" => Map {
            "description" => "properties that adjust the style of text, not related to the font properties",
            "vocabulary" => Map {
              "color" => Map {
                "description" => "Sets the color of some text",
                "values" => Map {
                  "0" => "color",
                },
              },
              "direction" => Map {
                "description" => "Sets the text direction",
                "values" => Map {
                  "0" => "ltr",
                  "1" => "rtl",
                },
              },
              "line-height" => Map {
                "description" => "Sets the distance between lines",
                "values" => Map {
                  "0" => "normal",
                  "1" => "number",
                  "2" => "length",
                },
              },
              "letter-spacing" => Map {
                "description" => "Increase or decrease the space between characters",
                "values" => Map {
                  "0" => "normal",
                  "1" => "length",
                },
              },
              "text-align" => Map {
                "description" => "Aligns the text in an element",
                "values" => Map {
                  "0" => "left",
                  "1" => "right",
                  "2" => "center",
                  "3" => "justify",
                },
              },
              "text-decoration" => Map {
                "description" => "Adds decoration to text",
                "values" => Map {
                  "0" => "none",
                  "1" => "underline",
                  "2" => "overline",
                  "3" => "line-through",
                  "4" => "blink",
                },
              },
              "text-indent" => Map {
                "description" => "Indents the first line of text in an element",
                "values" => Map {
                  "0" => "length",
                  "1" => "%",
                },
              },
              "text-shadow" => Map {
                "description" => "Adds a shadow to text",
                "values" => Map {
                  "0" => "none",
                  "1" => "color",
                  "2" => "length",
                },
              },
              "text-transform" => Map {
                "description" => "Controls the letters in an element",
                "values" => Map {
                  "0" => "none",
                  "1" => "capitalize",
                  "2" => "uppercase",
                  "3" => "lowercase",
                },
              },
              "white-space" => Map {
                "description" => "Sets how white space inside an element is handled",
                "values" => Map {
                  "0" => "normal",
                  "1" => "length",
                },
              },
            },
          },
        },
        "html_elements" => Map {
          "document_metadata" => Map {
            "description" => "Metadata contains information about the page. This includes information about styles, scripts and data to help software (search engines, browsers, etc.) use and render the page",
            "vocabulary" => Map {
              "base" => "Element specifies the base URL to use for all relative URLs contained within a document. There can be only one in a document",
              "head" => "Element provides general information (metadata) about the document, including its title and links to its scripts and style sheets",
              "link" => "Element specifies relationships between the current document and an external resource",
              "meta" => "Element represents metadata that cannot be represented by other HTML meta-related elements",
              "style" => "Element contains style information for a document, or part of a document",
              "title" => "Element defines the document's title that is shown in a browser's title bar or a page's tab",
            },
          },
          "sectioning_root" => Map {
            "description" => "Elements that hold the content of the document",
            "vocabulary" => Map {
              "body" => "Element represents the content of an HTML document. There can be only one of this element in a document.",
            },
          },
          "content_sectioning" => Map {
            "description" => "Content sectioning elements allow you to organize the document content into logical pieces",
            "vocabulary" => Map {
              "address" => "Element indicates that the enclosed HTML provides contact information for a person or people, or for an organization",
              "article" => "Element represents a self-contained composition in a document, page, application, or site, which is intended to be independently distributable or reusable",
              "aside" => "Element represents a portion of a document whose content is only indirectly related to the document's main content",
              "footer" => "Element represents a footer for its nearest sectioning content or sectioning root element",
              "h1-h6" => "Elements represent six levels of section headings",
              "hgroup" => " element represents a multi-level heading for a section of a document. It groups a set of <h1>â<h6> elements",
              "main" => "Element represents the dominant content of the <body> of a document, and directly related to or expands upon the central topic of document",
              "nav" => "Element represents a section of a page whose purpose is to provide navigation links",
              "section" => "Element represents a standalone section â which doesn't have a more specific semantic element to represent it",
            },
          },
          "text_content" => Map {
            "description" => "Elements to organize blocks or sections of content placed between the opening <body> and closing </body> tags",
            "vocabulary" => Map {
              "blockquote" => "Element indicates that the enclosed text is an extended quotation",
              "dd" => "Element provides the details about or the definition of the preceding term (<dt>) in a description list (<dl>)",
              "div" => "Element is the generic container for flow content. It has no effect on the content or layout until styled using CSS",
              "dl" => "Element represents a description list",
              "dt" => "Element specifies a term in a description or definition list, and as such must be used inside a <dl> element",
              "figcaption" => "Element represents a caption or legend for the rest of the contents its parent <figure> element, if any",
              "figure" => "Element represents self-contained content, frequently with a caption (<figcaption>), and is typically referenced as a single unit",
              "hr" => "Element represents a thematic break between paragraph-level elements: for example, a change of scene in a story, or a shift of topic with a section",
              "li" => "Element is used to represent an item in a list",
              "main" => "Element represents the dominant content of the <body> of a document",
              "ol" => "Element represents an ordered list of items, typically rendered as a numbered list",
              "p" => "Element represents a paragraph",
              "pre" => "Element represents preformatted text which is to be presented exactly as written in the HTML file",
              "ul" => "Element represents an unordered list of items, typically rendered as a bulleted list",
            },
          },
          "inline_text_semantics" => Map {
            "description" => "Use the HTML inline text semantic to define the meaning, structure, or style of a word, line, or any arbitrary piece of text",
            "vocabulary" => Map {
              "a" => "Element creates a hyperlink to other web pages, files, locations within the same page, email addresses, or any other URL",
              "abbr" => "Element represents an abbreviation or acronym; the optional title attribute can provide an expansion or description for the abbreviation",
              "b" => "Element is used to draw the reader's attention to the element's contents, which are not otherwise granted special importance",
              "bdi" => "Element tells the browser's bidirectional algorithm to treat the text it contains in isolation from its surrounding text",
              "bdo" => "Element overrides the current directionality of text, so that the text within is rendered in a different direction",
              "br" => "Element produces a line break in text (carriage-return). It is useful for writing a poem or an address, where the division of lines is significant",
              "cite" => "Element is used to describe a reference to a cited creative work, and must include either the title or author or the URL of that work",
              "code" => "Element displays its contents styled in a fashion intended to indicate that the text is a short fragment of computer code",
              "dfn" => "Element is used to indicate the term being defined within the context of a definition phrase or sentence",
              "em" => "Element marks text that has stress emphasis",
              "i" => "Element represents a range of text that is set off from the normal text for some reason",
              "kbd" => "Element represents a span of inline text denoting textual user input from a keyboard, voice input, or any other text entry device",
              "mark" => "Element represents text which is marked or highlighted for reference or notation purposes, due to the marked passage's relevance or importance in the enclosing context",
              "q" => "Element indicates that the enclosed text is a short inline quotation",
              "rb" => "Element is used to delimit the base text component of a  <ruby> annotation",
              "rp" => "Element is used to provide fall-back parentheses for browsers that do not support display of ruby annotations using the <ruby> element",
              "rt" => "Element specifies the ruby text component of a ruby annotation, which is used to provide pronunciation, translation, or transliteration information for East Asian typography",
              "s" => "Element renders text with a strikethrough, or a line through it, used to represent things that are no longer relevant or no longer accurate",
              "samp" => "Element is used to enclose inline text which represents sample (or quoted) output from a computer program",
              "small" => "Element makes the text font size one size smaller",
              "span" => "Element is a generic inline container for phrasing content, which does not inherently represent anything, can be used for styling purposes",
              "strong" => "indicates that its contents have strong importance, seriousness, or urgency",
              "sub" => "Element specifies inline text which should be displayed as subscript for solely typographical reasons",
              "time" => "Element represents a specific period in time",
              "u" => "Element represents a span of inline text which should be rendered in a way that indicates that it has a non-textual annotation",
              "var" => "represents the name of a variable in a mathematical expression or a programming context",
              "wbr" => "Element represents a word break opportunityâa position within text where the browser may optionally break a line",
            },
          },
          "image_and_multimedia" => Map {
            "description" => "HTML supports various multimedia resources such as images, audio, and video",
            "vocabulary" => Map {
              "area" => "Element defines a hot-spot region on an image, and optionally associates it with a hypertext link. This element is used only within a <map> element",
              "audio" => "Element is used to embed sound content in documents",
              "img" => "Element embeds an image into the document",
              "map" => "Element is used with <area> elements to define an image map",
              "track" => "Element is used as a child of the media elements <audio> and <video>. It lets you specify timed text tracks(subtitles)",
              "video" => "Element embeds a media player which supports video playback into the document",
            },
          },
          "embedded_content" => Map {
            "description" => "In addition to regular multimedia content, HTML can include a variety of other content, even if it's not always easy to interact with",
            "vocabulary" => Map {
              "embed" => "Element embeds external content at the specified point in the document",
              "iframe" => "Element represents a nested browsing context, embedding another HTML page into the current one",
              "object" => "Element represents an external resource, which can be treated as an image, a nested browsing context, or a resource to be handled by a plugin",
              "param" => "Element defines parameters for an <object> element",
              "picture" => "Element contains zero or more <source> elements and one <img> element to provide versions of an image for different display/device scenarios",
              "source" => "Element specifies multiple media resources for the <picture>, the <audio> element, or the <video> element",
            },
          },
          "scripting" => Map {
            "description" => "In order to create dynamic content and Web applications, HTML supports the use of scripting languages, most prominently JavaScript. Certain elements support this capability",
            "vocabulary" => Map {
              "canvas" => "Element with either the canvas scripting API or the WebGL API to draw graphics and animations",
              "noscript" => "Element defines a section of HTML to be inserted if a script type on the page is unsupported or if scripting is currently turned off in the browser",
              "script" => "Element is used to embed or reference executable code; this is typically used to embed or refer to JavaScript code",
            },
          },
          "demarcating_edits" => Map {
            "description" => "These elements let you provide indications that specific parts of the text have been altered",
            "vocabulary" => Map {
              "del" => "Element represents a range of text that has been deleted from a document",
              "ins" => "Element represents a range of text that has been added to a document",
            },
          },
          "table_content" => Map {
            "description" => "The elements here are used to create and handle tabular data",
            "vocabulary" => Map {
              "caption" => "Element specifies the caption (or title) of a table, and if used is always the first child of a <table>",
              "col" => " element defines a column within a table and is used for defining common semantics on all common cells. It is generally found within a <colgroup> element",
              "colgroup" => "Element defines a group of columns within a table",
              "table" => "Element represents tabular data â that is, information presented in a two-dimensional table comprised of rows and columns of cells containing data",
              "tbody" => "Element encapsulates a set of table row (<tr> elements), indicating that they comprise the body of the table",
              "td" => "Element defines a cell of a table that contains data. It participates in the table model",
              "tfoot" => "Element defines a set of rows summarizing the columns of the table",
              "th" => "Element defines a cell as header of a group of table cells. The exact nature of this group is defined by the scope and headers attributes",
              "thead" => "Element defines a set of rows defining the head of the columns of the table",
              "tr" => "Element defines a row of cells in a table",
            },
          },
          "forms" => Map {
            "description" => "HTML provides a number of elements which can be used together to create forms which the user can fill out and submit to the Web site or application",
            "vocabulary" => Map {
              "buttons" => "Element represents a clickable button, which can be used in forms or anywhere in a document that needs simple, standard button functionality",
              "datalist" => "Element contains a set of <option> elements that represent the values available for other controls",
              "fieldset" => "Element is used to group several controls as well as labels (<label>) within a web form",
              "form" => "Element represents a document section that contains interactive controls for submitting information to a web server",
              "input" => "Element is used to create interactive controls for web-based forms in order to accept data from the user",
              "label" => "Element represents a caption for an item in a user interface",
              "legend" => "Element represents a caption for the content of its parent <fieldset>",
              "meter" => "Element represents either a scalar value within a known range or a fractional value",
              "optgroup" => "Element creates a grouping of options within a <select> element",
              "option" => "Element is used to define an item contained in a <select>, an <optgroup>, or a <datalist> element",
              "output" => "Element is a container element into which a site or app can inject the results of a calculation or the outcome of a user action",
              "progress" => "Element displays an indicator showing the completion progress of a task, typically displayed as a progress bar",
              "select" => "Element represents a control that provides a menu of options",
              "textarea" => "Element represents a multi-line plain-text editing control, useful when you want to allow users to enter a sizeable amount of free-form text, for example a comment on a review or feedback form",
            },
          },
          "interactive_elements" => Map {
            "description" => "HTML offers a selection of elements which help to create interactive user interface objects",
            "vocabulary" => Map {
              "details" => "creates a disclosure widget in which information is visible only when the widget is toggled into an \\"open\\" state",
              "dialog" => "Element represents a dialog box or other interactive component, such as an inspector or window",
              "menu" => "Element represents a group of commands that a user can perform or activate",
              "menuitem" => "Element represents a command that a user is able to invoke through a popup menu",
              "summary" => "Element specifies a summary, caption, or legend for a <details> element's disclosure box",
            },
          },
        },
        "mod_one_vocab" => Map {
          "js_1" => Map {
            "description" => "Learn the fundaments of Javascript",
            "vocabulary" => Map {
              "data_type" => "A kind of data, defined by the values it can hold and the operations that can be done on it",
              "primitive_type" => "A kind of data type. Primitives in Javascript are [string, number, boolean, null, undefined, symbol]",
              "variable" => "A container for a value. The main building block for all programming",
              "declare" => "Creating a new variable (distinct from assignment)",
              "assignment" => "Assigning a value to a variable",
              "type_coercion" => "The process of converting a value from one type to another (such as a number to a string)",
              "concatenation" => "The binding of multiple strings together using the + string operator",
              "interpolation" => "The process of injecting a variable directly into a string",
              "template_literal" => "Template literals are string literals that provide an easy way to interpolate a variable or expression into a string",
              "statement" => "An executable piece of code",
              "expression" => "An executable piece of code that resolves to a single value. The result of which may be assigned to a variable",
              "operator" => "Symbols that are used to assign, compare, and perform operations",
              "conditional" => "An expression that evaluates to true or false, or a control flow statement that executes code",
              "function" => "A predefined and reusable group of behavior",
              "invoke" => "running a function",
              "parameters" => "The variables declared in a function definition",
              "arguments" => "The variables passed to a function when itâs called/invoked",
            },
          },
          "js_2" => Map {
            "description" => "Learn about scope, context in Javascript",
            "vocabulary" => Map {
              "anonymous_function" => "a function without a name",
              "scope" => "Determines the accessibility/visibility of variables and functions",
              "hoisting" => "The process of implicitly moving the declaration of variables and functions to the top of their scope",
              "literal" => "A way of declaring a data structure and its values at the same time",
              "array" => "Used to store a collection of data items/multiple values under a single variable name",
              "loops" => " A quick and easy way to do something repeatedly",
              "control_flow" => "The order in which the computer executes statements in a script",
              "dry" => "Programming principle that means Don't Repeat Yourself",
            },
          },
          "js_3" => Map {
            "description" => "Learn the fundaments of Javascript interacting with a WebPage",
            "vocabulary" => Map {
              "html_element" => "A building block that makes up the structure of a web page",
              "css_selector" => "A way to identify a set elements, typically using a tag, class or id",
              "interface" => "a shared boundary across which two separate components exchange information",
              "dom" => "Document Object Model, the JS interface used to interact with HTML",
              "event" => "Any event which takes place in the DOM, these can be generated by users or the browser",
              "event_handler" => "A function that will run when a specific event occurs",
            },
          },
          "js_4" => Map {
            "description" => "Learn the advanced Javascript",
            "vocabulary" => Map {
              "object" => "A bundle of behavior (methods) and state (properties)",
              "key" => "The name used to reference a Value on an Object",
              "value" => "The data referenced by a Key",
              "property" => "Another word for the âKeyâ portion of a key-value pair on an object",
              "method" => "A function on an Object",
              "dot_notation" => "Notation to access a Value on an Object, explicitly specifies the Key",
              "bracket_notation" => "Notation to access a Value on an Object, usually specifies a Key via a variable",
              "this" => " A variable that changes depending on the context in which itâs used",
              "class" => " A constructor that allows us to create multiple instances",
              "instance" => "An object of a certain type",
            },
          },
        },
      }
    }
    user={
      Object {
        "cascading_style_sheets": Object {
          "words": Array [],
        },
        "email": "me@me.com",
        "firstName": "Justin",
        "html_elements": Object {
          "words": Array [],
        },
        "javascript": Object {
          "words": Array [
            "var",
          ],
        },
        "lastName": "Duncan",
        "mod_one_vocab": Object {
          "words": Array [],
        },
        "score": 150,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h2>
          Word List
        </h2>,
        <ul
          className="vocab-list"
        >
          <li
            onClick={[Function]}
          >
            add
          </li>
          <li
            onClick={[Function]}
          >
            addition
          </li>
          <li
            onClick={[Function]}
          >
            boolean
          </li>
          <li
            onClick={[Function]}
          >
            charAt
          </li>
          <li
            onClick={[Function]}
          >
            charCodeAt
          </li>
          <li
            onClick={[Function]}
          >
            clear_(Map)
          </li>
          <li
            onClick={[Function]}
          >
            clear_(Set)
          </li>
          <li
            onClick={[Function]}
          >
            concat_(Array)
          </li>
          <li
            onClick={[Function]}
          >
            concat_(String)
          </li>
          <li
            onClick={[Function]}
          >
            const
          </li>
          <li
            onClick={[Function]}
          >
            copyWithin
          </li>
          <li
            onClick={[Function]}
          >
            decrement
          </li>
          <li
            onClick={[Function]}
          >
            delete_(Map)
          </li>
          <li
            onClick={[Function]}
          >
            delete_(Set)
          </li>
          <li
            onClick={[Function]}
          >
            division
          </li>
          <li
            onClick={[Function]}
          >
            endsWith
          </li>
          <li
            onClick={[Function]}
          >
            entries
          </li>
          <li
            onClick={[Function]}
          >
            every
          </li>
          <li
            onClick={[Function]}
          >
            exponentiation
          </li>
          <li
            onClick={[Function]}
          >
            fill
          </li>
          <li
            onClick={[Function]}
          >
            filter
          </li>
          <li
            onClick={[Function]}
          >
            find
          </li>
          <li
            onClick={[Function]}
          >
            findIndex
          </li>
          <li
            onClick={[Function]}
          >
            forEach_(Array)
          </li>
          <li
            onClick={[Function]}
          >
            forEach_(Map)
          </li>
          <li
            onClick={[Function]}
          >
            from
          </li>
          <li
            onClick={[Function]}
          >
            fromCharCode
          </li>
          <li
            onClick={[Function]}
          >
            fromCodePoint
          </li>
          <li
            onClick={[Function]}
          >
            get
          </li>
          <li
            onClick={[Function]}
          >
            has_(Map)
          </li>
          <li
            onClick={[Function]}
          >
            has_(Set)
          </li>
          <li
            onClick={[Function]}
          >
            includes_(Array)
          </li>
          <li
            onClick={[Function]}
          >
            includes_(String)
          </li>
          <li
            onClick={[Function]}
          >
            increment(++)
          </li>
          <li
            onClick={[Function]}
          >
            indexOf_(Array)
          </li>
          <li
            onClick={[Function]}
          >
            indexOf_(String)
          </li>
          <li
            onClick={[Function]}
          >
            isArray
          </li>
          <li
            onClick={[Function]}
          >
            isFinite
          </li>
          <li
            onClick={[Function]}
          >
            isInteger
          </li>
          <li
            onClick={[Function]}
          >
            isNan
          </li>
          <li
            onClick={[Function]}
          >
            isSafeInteger
          </li>
          <li
            onClick={[Function]}
          >
            join
          </li>
          <li
            onClick={[Function]}
          >
            keys
          </li>
          <li
            onClick={[Function]}
          >
            lastIndexOf_(Array)
          </li>
          <li
            onClick={[Function]}
          >
            lastIndexOf_(String)
          </li>
          <li
            onClick={[Function]}
          >
            let
          </li>
          <li
            onClick={[Function]}
          >
            map
          </li>
          <li
            onClick={[Function]}
          >
            match
          </li>
          <li
            onClick={[Function]}
          >
            multiplicaton
          </li>
          <li
            onClick={[Function]}
          >
            null
          </li>
          <li
            onClick={[Function]}
          >
            number
          </li>
          <li
            onClick={[Function]}
          >
            object
          </li>
          <li
            onClick={[Function]}
          >
            padEnd
          </li>
          <li
            onClick={[Function]}
          >
            padStart
          </li>
          <li
            onClick={[Function]}
          >
            parseFloat
          </li>
          <li
            onClick={[Function]}
          >
            parseInt
          </li>
          <li
            onClick={[Function]}
          >
            pop
          </li>
          <li
            onClick={[Function]}
          >
            push
          </li>
          <li
            onClick={[Function]}
          >
            reduce
          </li>
          <li
            onClick={[Function]}
          >
            reduceRight
          </li>
          <li
            onClick={[Function]}
          >
            remainder(%)
          </li>
          <li
            onClick={[Function]}
          >
            repeat
          </li>
          <li
            onClick={[Function]}
          >
            replace
          </li>
          <li
            onClick={[Function]}
          >
            reverse
          </li>
          <li
            onClick={[Function]}
          >
            search
          </li>
          <li
            onClick={[Function]}
          >
            set
          </li>
          <li
            onClick={[Function]}
          >
            shift
          </li>
          <li
            onClick={[Function]}
          >
            size
          </li>
          <li
            onClick={[Function]}
          >
            slice_(Array)
          </li>
          <li
            onClick={[Function]}
          >
            slice_(String)
          </li>
          <li
            onClick={[Function]}
          >
            some
          </li>
          <li
            onClick={[Function]}
          >
            sort
          </li>
          <li
            onClick={[Function]}
          >
            splice
          </li>
          <li
            onClick={[Function]}
          >
            split
          </li>
          <li
            onClick={[Function]}
          >
            startsWith
          </li>
          <li
            onClick={[Function]}
          >
            string
          </li>
          <li
            onClick={[Function]}
          >
            substring
          </li>
          <li
            onClick={[Function]}
          >
            subtraction
          </li>
          <li
            onClick={[Function]}
          >
            symbol
          </li>
          <li
            onClick={[Function]}
          >
            toExponential
          </li>
          <li
            onClick={[Function]}
          >
            toFixed
          </li>
          <li
            onClick={[Function]}
          >
            trim
          </li>
          <li
            onClick={[Function]}
          >
            unary_negation
          </li>
          <li
            onClick={[Function]}
          >
            unary_plus
          </li>
          <li
            onClick={[Function]}
          >
            undefined
          </li>
          <li
            onClick={[Function]}
          >
            unshift
          </li>
          <li
            onClick={[Function]}
          >
            values
          </li>
        </ul>,
      ],
      "className": "vocab-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Word List",
        },
        "ref": null,
        "rendered": "Word List",
        "type": "h2",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li
              onClick={[Function]}
            >
              add
            </li>,
            <li
              onClick={[Function]}
            >
              addition
            </li>,
            <li
              onClick={[Function]}
            >
              boolean
            </li>,
            <li
              onClick={[Function]}
            >
              charAt
            </li>,
            <li
              onClick={[Function]}
            >
              charCodeAt
            </li>,
            <li
              onClick={[Function]}
            >
              clear_(Map)
            </li>,
            <li
              onClick={[Function]}
            >
              clear_(Set)
            </li>,
            <li
              onClick={[Function]}
            >
              concat_(Array)
            </li>,
            <li
              onClick={[Function]}
            >
              concat_(String)
            </li>,
            <li
              onClick={[Function]}
            >
              const
            </li>,
            <li
              onClick={[Function]}
            >
              copyWithin
            </li>,
            <li
              onClick={[Function]}
            >
              decrement
            </li>,
            <li
              onClick={[Function]}
            >
              delete_(Map)
            </li>,
            <li
              onClick={[Function]}
            >
              delete_(Set)
            </li>,
            <li
              onClick={[Function]}
            >
              division
            </li>,
            <li
              onClick={[Function]}
            >
              endsWith
            </li>,
            <li
              onClick={[Function]}
            >
              entries
            </li>,
            <li
              onClick={[Function]}
            >
              every
            </li>,
            <li
              onClick={[Function]}
            >
              exponentiation
            </li>,
            <li
              onClick={[Function]}
            >
              fill
            </li>,
            <li
              onClick={[Function]}
            >
              filter
            </li>,
            <li
              onClick={[Function]}
            >
              find
            </li>,
            <li
              onClick={[Function]}
            >
              findIndex
            </li>,
            <li
              onClick={[Function]}
            >
              forEach_(Array)
            </li>,
            <li
              onClick={[Function]}
            >
              forEach_(Map)
            </li>,
            <li
              onClick={[Function]}
            >
              from
            </li>,
            <li
              onClick={[Function]}
            >
              fromCharCode
            </li>,
            <li
              onClick={[Function]}
            >
              fromCodePoint
            </li>,
            <li
              onClick={[Function]}
            >
              get
            </li>,
            <li
              onClick={[Function]}
            >
              has_(Map)
            </li>,
            <li
              onClick={[Function]}
            >
              has_(Set)
            </li>,
            <li
              onClick={[Function]}
            >
              includes_(Array)
            </li>,
            <li
              onClick={[Function]}
            >
              includes_(String)
            </li>,
            <li
              onClick={[Function]}
            >
              increment(++)
            </li>,
            <li
              onClick={[Function]}
            >
              indexOf_(Array)
            </li>,
            <li
              onClick={[Function]}
            >
              indexOf_(String)
            </li>,
            <li
              onClick={[Function]}
            >
              isArray
            </li>,
            <li
              onClick={[Function]}
            >
              isFinite
            </li>,
            <li
              onClick={[Function]}
            >
              isInteger
            </li>,
            <li
              onClick={[Function]}
            >
              isNan
            </li>,
            <li
              onClick={[Function]}
            >
              isSafeInteger
            </li>,
            <li
              onClick={[Function]}
            >
              join
            </li>,
            <li
              onClick={[Function]}
            >
              keys
            </li>,
            <li
              onClick={[Function]}
            >
              lastIndexOf_(Array)
            </li>,
            <li
              onClick={[Function]}
            >
              lastIndexOf_(String)
            </li>,
            <li
              onClick={[Function]}
            >
              let
            </li>,
            <li
              onClick={[Function]}
            >
              map
            </li>,
            <li
              onClick={[Function]}
            >
              match
            </li>,
            <li
              onClick={[Function]}
            >
              multiplicaton
            </li>,
            <li
              onClick={[Function]}
            >
              null
            </li>,
            <li
              onClick={[Function]}
            >
              number
            </li>,
            <li
              onClick={[Function]}
            >
              object
            </li>,
            <li
              onClick={[Function]}
            >
              padEnd
            </li>,
            <li
              onClick={[Function]}
            >
              padStart
            </li>,
            <li
              onClick={[Function]}
            >
              parseFloat
            </li>,
            <li
              onClick={[Function]}
            >
              parseInt
            </li>,
            <li
              onClick={[Function]}
            >
              pop
            </li>,
            <li
              onClick={[Function]}
            >
              push
            </li>,
            <li
              onClick={[Function]}
            >
              reduce
            </li>,
            <li
              onClick={[Function]}
            >
              reduceRight
            </li>,
            <li
              onClick={[Function]}
            >
              remainder(%)
            </li>,
            <li
              onClick={[Function]}
            >
              repeat
            </li>,
            <li
              onClick={[Function]}
            >
              replace
            </li>,
            <li
              onClick={[Function]}
            >
              reverse
            </li>,
            <li
              onClick={[Function]}
            >
              search
            </li>,
            <li
              onClick={[Function]}
            >
              set
            </li>,
            <li
              onClick={[Function]}
            >
              shift
            </li>,
            <li
              onClick={[Function]}
            >
              size
            </li>,
            <li
              onClick={[Function]}
            >
              slice_(Array)
            </li>,
            <li
              onClick={[Function]}
            >
              slice_(String)
            </li>,
            <li
              onClick={[Function]}
            >
              some
            </li>,
            <li
              onClick={[Function]}
            >
              sort
            </li>,
            <li
              onClick={[Function]}
            >
              splice
            </li>,
            <li
              onClick={[Function]}
            >
              split
            </li>,
            <li
              onClick={[Function]}
            >
              startsWith
            </li>,
            <li
              onClick={[Function]}
            >
              string
            </li>,
            <li
              onClick={[Function]}
            >
              substring
            </li>,
            <li
              onClick={[Function]}
            >
              subtraction
            </li>,
            <li
              onClick={[Function]}
            >
              symbol
            </li>,
            <li
              onClick={[Function]}
            >
              toExponential
            </li>,
            <li
              onClick={[Function]}
            >
              toFixed
            </li>,
            <li
              onClick={[Function]}
            >
              trim
            </li>,
            <li
              onClick={[Function]}
            >
              unary_negation
            </li>,
            <li
              onClick={[Function]}
            >
              unary_plus
            </li>,
            <li
              onClick={[Function]}
            >
              undefined
            </li>,
            <li
              onClick={[Function]}
            >
              unshift
            </li>,
            <li
              onClick={[Function]}
            >
              values
            </li>,
          ],
          "className": "vocab-list",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "56fee501-770a-41d6-9d05-ef9d22c7c77d",
            "nodeType": "host",
            "props": Object {
              "children": "add",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "add",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "9177f60f-af2e-43c8-956a-c5085b6a5c96",
            "nodeType": "host",
            "props": Object {
              "children": "addition",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "addition",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "d092334a-6b2e-4e61-85c2-cf5f33539098",
            "nodeType": "host",
            "props": Object {
              "children": "boolean",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "boolean",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "e8377e9d-ea4c-4200-8651-6affa0de2440",
            "nodeType": "host",
            "props": Object {
              "children": "charAt",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "charAt",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "566746c1-ede2-40fb-a291-132f987ac358",
            "nodeType": "host",
            "props": Object {
              "children": "charCodeAt",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "charCodeAt",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "a1c637ab-30a0-4124-91e3-d2cbe2b1c9e0",
            "nodeType": "host",
            "props": Object {
              "children": "clear_(Map)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "clear_(Map)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "3f2f84df-80b3-43fa-aabc-9c8db5f62082",
            "nodeType": "host",
            "props": Object {
              "children": "clear_(Set)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "clear_(Set)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "39cfd4ac-069c-478e-90bd-8026133e7e4b",
            "nodeType": "host",
            "props": Object {
              "children": "concat_(Array)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "concat_(Array)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "0db6f0c4-2be1-41c9-b4b8-3e4790c00723",
            "nodeType": "host",
            "props": Object {
              "children": "concat_(String)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "concat_(String)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "0159cc36-4526-4bd8-80c6-70b2395cdd58",
            "nodeType": "host",
            "props": Object {
              "children": "const",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "const",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "3e44773d-7eed-4643-9ac3-69db90e4aa2f",
            "nodeType": "host",
            "props": Object {
              "children": "copyWithin",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "copyWithin",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "2be2d1f7-df05-46a2-9550-9378e1be1306",
            "nodeType": "host",
            "props": Object {
              "children": "decrement",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "decrement",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "9a579ffc-53a8-472b-a90d-5245446d9174",
            "nodeType": "host",
            "props": Object {
              "children": "delete_(Map)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "delete_(Map)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "0695ef13-15ed-4e5d-8ef5-4f398dcc0643",
            "nodeType": "host",
            "props": Object {
              "children": "delete_(Set)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "delete_(Set)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "1b3659aa-1ccf-40ed-bf84-6692a3dfb270",
            "nodeType": "host",
            "props": Object {
              "children": "division",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "division",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "171e2e3c-96a6-48ac-9e94-64912b871448",
            "nodeType": "host",
            "props": Object {
              "children": "endsWith",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "endsWith",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "6b8cb692-3f3b-4516-91a5-748ba2727b92",
            "nodeType": "host",
            "props": Object {
              "children": "entries",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "entries",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "ba5e70a6-474c-47bb-817b-47924b2e0147",
            "nodeType": "host",
            "props": Object {
              "children": "every",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "every",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "97d91646-4dd9-47eb-b71c-2156fdbb177e",
            "nodeType": "host",
            "props": Object {
              "children": "exponentiation",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "exponentiation",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "ffcfaab9-0318-40f3-b17b-576e1fd01a06",
            "nodeType": "host",
            "props": Object {
              "children": "fill",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "fill",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "4df558e0-f034-408f-8fd6-8ab39d136f94",
            "nodeType": "host",
            "props": Object {
              "children": "filter",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "filter",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "87aabe7b-26df-4516-8fa6-542d0c49462a",
            "nodeType": "host",
            "props": Object {
              "children": "find",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "find",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "7ecaf538-3d93-48b2-84e1-573dd4ea2a83",
            "nodeType": "host",
            "props": Object {
              "children": "findIndex",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "findIndex",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "0870d7d4-3904-4b69-937d-762610764d88",
            "nodeType": "host",
            "props": Object {
              "children": "forEach_(Array)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "forEach_(Array)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "cf19744c-3121-414f-865e-f2a8ea9253ef",
            "nodeType": "host",
            "props": Object {
              "children": "forEach_(Map)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "forEach_(Map)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "83c351a5-aa2e-4e47-a7fc-6fb2a8c2158e",
            "nodeType": "host",
            "props": Object {
              "children": "from",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "from",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "6e248200-d6ab-48b3-bc90-30d98580de5b",
            "nodeType": "host",
            "props": Object {
              "children": "fromCharCode",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "fromCharCode",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "f017ced3-56ca-48c3-ad84-0457ab1511b0",
            "nodeType": "host",
            "props": Object {
              "children": "fromCodePoint",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "fromCodePoint",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "b66ba086-ae07-49f0-bbcc-ed8788010112",
            "nodeType": "host",
            "props": Object {
              "children": "get",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "get",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "1734a588-7408-4d6f-b847-b147c18839cf",
            "nodeType": "host",
            "props": Object {
              "children": "has_(Map)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "has_(Map)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "d699da06-9226-405e-abbc-50d71a680b5c",
            "nodeType": "host",
            "props": Object {
              "children": "has_(Set)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "has_(Set)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "37eb2e75-42ec-4590-9ef5-ec16bd0c3e98",
            "nodeType": "host",
            "props": Object {
              "children": "includes_(Array)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "includes_(Array)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "ca051c45-99bd-475f-8e7b-6d4d3810704b",
            "nodeType": "host",
            "props": Object {
              "children": "includes_(String)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "includes_(String)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "8d4644d4-6874-4a25-b8b1-458ab8b7db36",
            "nodeType": "host",
            "props": Object {
              "children": "increment(++)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "increment(++)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "0eda8996-dffd-4a9f-b07d-12991c0986d5",
            "nodeType": "host",
            "props": Object {
              "children": "indexOf_(Array)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "indexOf_(Array)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "453efdba-072d-4675-afd3-ba97f1f3da66",
            "nodeType": "host",
            "props": Object {
              "children": "indexOf_(String)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "indexOf_(String)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "c4e8886a-4287-45c4-85f7-edb5ce10da84",
            "nodeType": "host",
            "props": Object {
              "children": "isArray",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "isArray",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "2a9175d3-9a21-42f5-9473-3d2f5b9c3f92",
            "nodeType": "host",
            "props": Object {
              "children": "isFinite",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "isFinite",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "92e6f078-f147-4f48-915c-7ff50db8a3de",
            "nodeType": "host",
            "props": Object {
              "children": "isInteger",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "isInteger",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "5206cccb-9b59-4eb9-b4af-b84a40867c05",
            "nodeType": "host",
            "props": Object {
              "children": "isNan",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "isNan",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "eea8e36d-d93f-4711-96f9-b8c4b5badeec",
            "nodeType": "host",
            "props": Object {
              "children": "isSafeInteger",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "isSafeInteger",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "aded4ca6-78ec-4752-8416-3bcba09f8e20",
            "nodeType": "host",
            "props": Object {
              "children": "join",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "join",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "9842b47c-7312-4877-a490-ff565447893b",
            "nodeType": "host",
            "props": Object {
              "children": "keys",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "keys",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "aa1c3d8f-90e2-4032-b01d-00f70c781da2",
            "nodeType": "host",
            "props": Object {
              "children": "lastIndexOf_(Array)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "lastIndexOf_(Array)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "a78140e2-24a5-4e88-8901-b186278ec9c7",
            "nodeType": "host",
            "props": Object {
              "children": "lastIndexOf_(String)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "lastIndexOf_(String)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "ae649506-2884-44b7-b98b-db0816d4ef0b",
            "nodeType": "host",
            "props": Object {
              "children": "let",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "let",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "7f2842cf-285b-43dc-99cf-f74350780e6d",
            "nodeType": "host",
            "props": Object {
              "children": "map",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "map",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "f5533bab-03a6-4363-8f28-dbfd0055e59e",
            "nodeType": "host",
            "props": Object {
              "children": "match",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "match",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "a3fa17ea-12dd-4ed0-9cec-9dca01e56070",
            "nodeType": "host",
            "props": Object {
              "children": "multiplicaton",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "multiplicaton",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "5dca79b7-c0a2-4d7c-bb9b-852079bb1e5c",
            "nodeType": "host",
            "props": Object {
              "children": "null",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "null",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "66a1dc92-d498-48d2-be53-7a76174a587d",
            "nodeType": "host",
            "props": Object {
              "children": "number",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "number",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "097d3e22-0c88-4794-8b12-27b7a2e65315",
            "nodeType": "host",
            "props": Object {
              "children": "object",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "object",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "d1636a69-a30a-4a99-ad45-15f38f76683d",
            "nodeType": "host",
            "props": Object {
              "children": "padEnd",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "padEnd",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "6269a2f9-5bb8-4b0a-b4df-5077e67e462a",
            "nodeType": "host",
            "props": Object {
              "children": "padStart",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "padStart",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "8ad07791-78b3-449f-9027-ef78b150d3fe",
            "nodeType": "host",
            "props": Object {
              "children": "parseFloat",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "parseFloat",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "11069f2b-acc3-4aef-a257-778d4a5bf789",
            "nodeType": "host",
            "props": Object {
              "children": "parseInt",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "parseInt",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "35afd176-0990-4a20-8ca5-9499e06de00f",
            "nodeType": "host",
            "props": Object {
              "children": "pop",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "pop",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "fbd228c5-7d86-4a2e-ba25-e943303f0350",
            "nodeType": "host",
            "props": Object {
              "children": "push",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "push",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "1e173fe5-42f7-41a5-9975-26f0c3751d6c",
            "nodeType": "host",
            "props": Object {
              "children": "reduce",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "reduce",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "990443ae-f6dd-460c-ac0e-c862415dcd03",
            "nodeType": "host",
            "props": Object {
              "children": "reduceRight",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "reduceRight",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "340fb0f4-0e11-46c6-8bcf-d247798bd948",
            "nodeType": "host",
            "props": Object {
              "children": "remainder(%)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "remainder(%)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "f6303118-e6fa-4939-9f19-872b721db2f8",
            "nodeType": "host",
            "props": Object {
              "children": "repeat",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "repeat",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "0021534d-e31f-4cc0-a51b-d85fd2cbedaf",
            "nodeType": "host",
            "props": Object {
              "children": "replace",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "replace",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "28897f02-64f3-4f05-9714-5194605d367c",
            "nodeType": "host",
            "props": Object {
              "children": "reverse",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "reverse",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "fe5709da-ad79-475e-92d6-75791989dc55",
            "nodeType": "host",
            "props": Object {
              "children": "search",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "search",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "8432a869-0b06-4b1a-9171-ebf0d4e66827",
            "nodeType": "host",
            "props": Object {
              "children": "set",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "set",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "5f74bbbc-ddb4-4e24-97b8-76f14ffaf9b9",
            "nodeType": "host",
            "props": Object {
              "children": "shift",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "shift",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "3ca8f481-c365-4c42-abb5-9c56985092d0",
            "nodeType": "host",
            "props": Object {
              "children": "size",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "size",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "5c728209-0248-45d4-b504-54198c2c53de",
            "nodeType": "host",
            "props": Object {
              "children": "slice_(Array)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "slice_(Array)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "66e5a098-fd6b-4c82-b765-b26f46936337",
            "nodeType": "host",
            "props": Object {
              "children": "slice_(String)",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "slice_(String)",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "f127b325-043c-406e-82bd-3a65cb713973",
            "nodeType": "host",
            "props": Object {
              "children": "some",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "some",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "5b6fee9f-c640-4721-856b-00b96eeecab0",
            "nodeType": "host",
            "props": Object {
              "children": "sort",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "sort",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "cc0794bc-d7a0-48b7-af06-0eae5f73daf1",
            "nodeType": "host",
            "props": Object {
              "children": "splice",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "splice",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "0711c358-3635-416c-bf28-0572419bd780",
            "nodeType": "host",
            "props": Object {
              "children": "split",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "split",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "8fdf5cb3-ba34-4456-8c16-e9ad850f248a",
            "nodeType": "host",
            "props": Object {
              "children": "startsWith",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "startsWith",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "c39d368d-908e-4f34-a96d-bc32031fefe3",
            "nodeType": "host",
            "props": Object {
              "children": "string",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "string",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "a78f2e35-6931-40af-a670-142dffbd7f55",
            "nodeType": "host",
            "props": Object {
              "children": "substring",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "substring",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "503d12ee-b877-453f-bb49-542e46b5692e",
            "nodeType": "host",
            "props": Object {
              "children": "subtraction",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "subtraction",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "a25e1bd6-6757-4b24-944a-c01e047e1f5e",
            "nodeType": "host",
            "props": Object {
              "children": "symbol",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "symbol",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "40765c72-f962-46ab-b351-6ab14f2dc677",
            "nodeType": "host",
            "props": Object {
              "children": "toExponential",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "toExponential",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "dbeb908e-78ac-48cc-9e29-9eb23dd0e6bb",
            "nodeType": "host",
            "props": Object {
              "children": "toFixed",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "toFixed",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "2e5223f1-4e55-4f1d-92b1-66a105d9ee9b",
            "nodeType": "host",
            "props": Object {
              "children": "trim",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "trim",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "47111d3e-df55-40af-bd55-2ad4372a26ee",
            "nodeType": "host",
            "props": Object {
              "children": "unary_negation",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "unary_negation",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "bd885f68-9b66-48dc-9c29-3c8ccd6bd04a",
            "nodeType": "host",
            "props": Object {
              "children": "unary_plus",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "unary_plus",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "bbf6b5c6-6cba-4696-86ba-21f13b7d8aa1",
            "nodeType": "host",
            "props": Object {
              "children": "undefined",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "undefined",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "1183587f-15f6-4f12-b2b0-7f166dfb08fe",
            "nodeType": "host",
            "props": Object {
              "children": "unshift",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "unshift",
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "bf8c818d-cd9c-4fb1-b50c-47a358c0fc6d",
            "nodeType": "host",
            "props": Object {
              "children": "values",
              "className": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "values",
            "type": "li",
          },
        ],
        "type": "ul",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            Word List
          </h2>,
          <ul
            className="vocab-list"
          >
            <li
              onClick={[Function]}
            >
              add
            </li>
            <li
              onClick={[Function]}
            >
              addition
            </li>
            <li
              onClick={[Function]}
            >
              boolean
            </li>
            <li
              onClick={[Function]}
            >
              charAt
            </li>
            <li
              onClick={[Function]}
            >
              charCodeAt
            </li>
            <li
              onClick={[Function]}
            >
              clear_(Map)
            </li>
            <li
              onClick={[Function]}
            >
              clear_(Set)
            </li>
            <li
              onClick={[Function]}
            >
              concat_(Array)
            </li>
            <li
              onClick={[Function]}
            >
              concat_(String)
            </li>
            <li
              onClick={[Function]}
            >
              const
            </li>
            <li
              onClick={[Function]}
            >
              copyWithin
            </li>
            <li
              onClick={[Function]}
            >
              decrement
            </li>
            <li
              onClick={[Function]}
            >
              delete_(Map)
            </li>
            <li
              onClick={[Function]}
            >
              delete_(Set)
            </li>
            <li
              onClick={[Function]}
            >
              division
            </li>
            <li
              onClick={[Function]}
            >
              endsWith
            </li>
            <li
              onClick={[Function]}
            >
              entries
            </li>
            <li
              onClick={[Function]}
            >
              every
            </li>
            <li
              onClick={[Function]}
            >
              exponentiation
            </li>
            <li
              onClick={[Function]}
            >
              fill
            </li>
            <li
              onClick={[Function]}
            >
              filter
            </li>
            <li
              onClick={[Function]}
            >
              find
            </li>
            <li
              onClick={[Function]}
            >
              findIndex
            </li>
            <li
              onClick={[Function]}
            >
              forEach_(Array)
            </li>
            <li
              onClick={[Function]}
            >
              forEach_(Map)
            </li>
            <li
              onClick={[Function]}
            >
              from
            </li>
            <li
              onClick={[Function]}
            >
              fromCharCode
            </li>
            <li
              onClick={[Function]}
            >
              fromCodePoint
            </li>
            <li
              onClick={[Function]}
            >
              get
            </li>
            <li
              onClick={[Function]}
            >
              has_(Map)
            </li>
            <li
              onClick={[Function]}
            >
              has_(Set)
            </li>
            <li
              onClick={[Function]}
            >
              includes_(Array)
            </li>
            <li
              onClick={[Function]}
            >
              includes_(String)
            </li>
            <li
              onClick={[Function]}
            >
              increment(++)
            </li>
            <li
              onClick={[Function]}
            >
              indexOf_(Array)
            </li>
            <li
              onClick={[Function]}
            >
              indexOf_(String)
            </li>
            <li
              onClick={[Function]}
            >
              isArray
            </li>
            <li
              onClick={[Function]}
            >
              isFinite
            </li>
            <li
              onClick={[Function]}
            >
              isInteger
            </li>
            <li
              onClick={[Function]}
            >
              isNan
            </li>
            <li
              onClick={[Function]}
            >
              isSafeInteger
            </li>
            <li
              onClick={[Function]}
            >
              join
            </li>
            <li
              onClick={[Function]}
            >
              keys
            </li>
            <li
              onClick={[Function]}
            >
              lastIndexOf_(Array)
            </li>
            <li
              onClick={[Function]}
            >
              lastIndexOf_(String)
            </li>
            <li
              onClick={[Function]}
            >
              let
            </li>
            <li
              onClick={[Function]}
            >
              map
            </li>
            <li
              onClick={[Function]}
            >
              match
            </li>
            <li
              onClick={[Function]}
            >
              multiplicaton
            </li>
            <li
              onClick={[Function]}
            >
              null
            </li>
            <li
              onClick={[Function]}
            >
              number
            </li>
            <li
              onClick={[Function]}
            >
              object
            </li>
            <li
              onClick={[Function]}
            >
              padEnd
            </li>
            <li
              onClick={[Function]}
            >
              padStart
            </li>
            <li
              onClick={[Function]}
            >
              parseFloat
            </li>
            <li
              onClick={[Function]}
            >
              parseInt
            </li>
            <li
              onClick={[Function]}
            >
              pop
            </li>
            <li
              onClick={[Function]}
            >
              push
            </li>
            <li
              onClick={[Function]}
            >
              reduce
            </li>
            <li
              onClick={[Function]}
            >
              reduceRight
            </li>
            <li
              onClick={[Function]}
            >
              remainder(%)
            </li>
            <li
              onClick={[Function]}
            >
              repeat
            </li>
            <li
              onClick={[Function]}
            >
              replace
            </li>
            <li
              onClick={[Function]}
            >
              reverse
            </li>
            <li
              onClick={[Function]}
            >
              search
            </li>
            <li
              onClick={[Function]}
            >
              set
            </li>
            <li
              onClick={[Function]}
            >
              shift
            </li>
            <li
              onClick={[Function]}
            >
              size
            </li>
            <li
              onClick={[Function]}
            >
              slice_(Array)
            </li>
            <li
              onClick={[Function]}
            >
              slice_(String)
            </li>
            <li
              onClick={[Function]}
            >
              some
            </li>
            <li
              onClick={[Function]}
            >
              sort
            </li>
            <li
              onClick={[Function]}
            >
              splice
            </li>
            <li
              onClick={[Function]}
            >
              split
            </li>
            <li
              onClick={[Function]}
            >
              startsWith
            </li>
            <li
              onClick={[Function]}
            >
              string
            </li>
            <li
              onClick={[Function]}
            >
              substring
            </li>
            <li
              onClick={[Function]}
            >
              subtraction
            </li>
            <li
              onClick={[Function]}
            >
              symbol
            </li>
            <li
              onClick={[Function]}
            >
              toExponential
            </li>
            <li
              onClick={[Function]}
            >
              toFixed
            </li>
            <li
              onClick={[Function]}
            >
              trim
            </li>
            <li
              onClick={[Function]}
            >
              unary_negation
            </li>
            <li
              onClick={[Function]}
            >
              unary_plus
            </li>
            <li
              onClick={[Function]}
            >
              undefined
            </li>
            <li
              onClick={[Function]}
            >
              unshift
            </li>
            <li
              onClick={[Function]}
            >
              values
            </li>
          </ul>,
        ],
        "className": "vocab-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Word List",
          },
          "ref": null,
          "rendered": "Word List",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <li
                onClick={[Function]}
              >
                add
              </li>,
              <li
                onClick={[Function]}
              >
                addition
              </li>,
              <li
                onClick={[Function]}
              >
                boolean
              </li>,
              <li
                onClick={[Function]}
              >
                charAt
              </li>,
              <li
                onClick={[Function]}
              >
                charCodeAt
              </li>,
              <li
                onClick={[Function]}
              >
                clear_(Map)
              </li>,
              <li
                onClick={[Function]}
              >
                clear_(Set)
              </li>,
              <li
                onClick={[Function]}
              >
                concat_(Array)
              </li>,
              <li
                onClick={[Function]}
              >
                concat_(String)
              </li>,
              <li
                onClick={[Function]}
              >
                const
              </li>,
              <li
                onClick={[Function]}
              >
                copyWithin
              </li>,
              <li
                onClick={[Function]}
              >
                decrement
              </li>,
              <li
                onClick={[Function]}
              >
                delete_(Map)
              </li>,
              <li
                onClick={[Function]}
              >
                delete_(Set)
              </li>,
              <li
                onClick={[Function]}
              >
                division
              </li>,
              <li
                onClick={[Function]}
              >
                endsWith
              </li>,
              <li
                onClick={[Function]}
              >
                entries
              </li>,
              <li
                onClick={[Function]}
              >
                every
              </li>,
              <li
                onClick={[Function]}
              >
                exponentiation
              </li>,
              <li
                onClick={[Function]}
              >
                fill
              </li>,
              <li
                onClick={[Function]}
              >
                filter
              </li>,
              <li
                onClick={[Function]}
              >
                find
              </li>,
              <li
                onClick={[Function]}
              >
                findIndex
              </li>,
              <li
                onClick={[Function]}
              >
                forEach_(Array)
              </li>,
              <li
                onClick={[Function]}
              >
                forEach_(Map)
              </li>,
              <li
                onClick={[Function]}
              >
                from
              </li>,
              <li
                onClick={[Function]}
              >
                fromCharCode
              </li>,
              <li
                onClick={[Function]}
              >
                fromCodePoint
              </li>,
              <li
                onClick={[Function]}
              >
                get
              </li>,
              <li
                onClick={[Function]}
              >
                has_(Map)
              </li>,
              <li
                onClick={[Function]}
              >
                has_(Set)
              </li>,
              <li
                onClick={[Function]}
              >
                includes_(Array)
              </li>,
              <li
                onClick={[Function]}
              >
                includes_(String)
              </li>,
              <li
                onClick={[Function]}
              >
                increment(++)
              </li>,
              <li
                onClick={[Function]}
              >
                indexOf_(Array)
              </li>,
              <li
                onClick={[Function]}
              >
                indexOf_(String)
              </li>,
              <li
                onClick={[Function]}
              >
                isArray
              </li>,
              <li
                onClick={[Function]}
              >
                isFinite
              </li>,
              <li
                onClick={[Function]}
              >
                isInteger
              </li>,
              <li
                onClick={[Function]}
              >
                isNan
              </li>,
              <li
                onClick={[Function]}
              >
                isSafeInteger
              </li>,
              <li
                onClick={[Function]}
              >
                join
              </li>,
              <li
                onClick={[Function]}
              >
                keys
              </li>,
              <li
                onClick={[Function]}
              >
                lastIndexOf_(Array)
              </li>,
              <li
                onClick={[Function]}
              >
                lastIndexOf_(String)
              </li>,
              <li
                onClick={[Function]}
              >
                let
              </li>,
              <li
                onClick={[Function]}
              >
                map
              </li>,
              <li
                onClick={[Function]}
              >
                match
              </li>,
              <li
                onClick={[Function]}
              >
                multiplicaton
              </li>,
              <li
                onClick={[Function]}
              >
                null
              </li>,
              <li
                onClick={[Function]}
              >
                number
              </li>,
              <li
                onClick={[Function]}
              >
                object
              </li>,
              <li
                onClick={[Function]}
              >
                padEnd
              </li>,
              <li
                onClick={[Function]}
              >
                padStart
              </li>,
              <li
                onClick={[Function]}
              >
                parseFloat
              </li>,
              <li
                onClick={[Function]}
              >
                parseInt
              </li>,
              <li
                onClick={[Function]}
              >
                pop
              </li>,
              <li
                onClick={[Function]}
              >
                push
              </li>,
              <li
                onClick={[Function]}
              >
                reduce
              </li>,
              <li
                onClick={[Function]}
              >
                reduceRight
              </li>,
              <li
                onClick={[Function]}
              >
                remainder(%)
              </li>,
              <li
                onClick={[Function]}
              >
                repeat
              </li>,
              <li
                onClick={[Function]}
              >
                replace
              </li>,
              <li
                onClick={[Function]}
              >
                reverse
              </li>,
              <li
                onClick={[Function]}
              >
                search
              </li>,
              <li
                onClick={[Function]}
              >
                set
              </li>,
              <li
                onClick={[Function]}
              >
                shift
              </li>,
              <li
                onClick={[Function]}
              >
                size
              </li>,
              <li
                onClick={[Function]}
              >
                slice_(Array)
              </li>,
              <li
                onClick={[Function]}
              >
                slice_(String)
              </li>,
              <li
                onClick={[Function]}
              >
                some
              </li>,
              <li
                onClick={[Function]}
              >
                sort
              </li>,
              <li
                onClick={[Function]}
              >
                splice
              </li>,
              <li
                onClick={[Function]}
              >
                split
              </li>,
              <li
                onClick={[Function]}
              >
                startsWith
              </li>,
              <li
                onClick={[Function]}
              >
                string
              </li>,
              <li
                onClick={[Function]}
              >
                substring
              </li>,
              <li
                onClick={[Function]}
              >
                subtraction
              </li>,
              <li
                onClick={[Function]}
              >
                symbol
              </li>,
              <li
                onClick={[Function]}
              >
                toExponential
              </li>,
              <li
                onClick={[Function]}
              >
                toFixed
              </li>,
              <li
                onClick={[Function]}
              >
                trim
              </li>,
              <li
                onClick={[Function]}
              >
                unary_negation
              </li>,
              <li
                onClick={[Function]}
              >
                unary_plus
              </li>,
              <li
                onClick={[Function]}
              >
                undefined
              </li>,
              <li
                onClick={[Function]}
              >
                unshift
              </li>,
              <li
                onClick={[Function]}
              >
                values
              </li>,
            ],
            "className": "vocab-list",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "56fee501-770a-41d6-9d05-ef9d22c7c77d",
              "nodeType": "host",
              "props": Object {
                "children": "add",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "add",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "9177f60f-af2e-43c8-956a-c5085b6a5c96",
              "nodeType": "host",
              "props": Object {
                "children": "addition",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "addition",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "d092334a-6b2e-4e61-85c2-cf5f33539098",
              "nodeType": "host",
              "props": Object {
                "children": "boolean",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "boolean",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "e8377e9d-ea4c-4200-8651-6affa0de2440",
              "nodeType": "host",
              "props": Object {
                "children": "charAt",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "charAt",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "566746c1-ede2-40fb-a291-132f987ac358",
              "nodeType": "host",
              "props": Object {
                "children": "charCodeAt",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "charCodeAt",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "a1c637ab-30a0-4124-91e3-d2cbe2b1c9e0",
              "nodeType": "host",
              "props": Object {
                "children": "clear_(Map)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "clear_(Map)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "3f2f84df-80b3-43fa-aabc-9c8db5f62082",
              "nodeType": "host",
              "props": Object {
                "children": "clear_(Set)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "clear_(Set)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "39cfd4ac-069c-478e-90bd-8026133e7e4b",
              "nodeType": "host",
              "props": Object {
                "children": "concat_(Array)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "concat_(Array)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "0db6f0c4-2be1-41c9-b4b8-3e4790c00723",
              "nodeType": "host",
              "props": Object {
                "children": "concat_(String)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "concat_(String)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "0159cc36-4526-4bd8-80c6-70b2395cdd58",
              "nodeType": "host",
              "props": Object {
                "children": "const",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "const",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "3e44773d-7eed-4643-9ac3-69db90e4aa2f",
              "nodeType": "host",
              "props": Object {
                "children": "copyWithin",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "copyWithin",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "2be2d1f7-df05-46a2-9550-9378e1be1306",
              "nodeType": "host",
              "props": Object {
                "children": "decrement",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "decrement",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "9a579ffc-53a8-472b-a90d-5245446d9174",
              "nodeType": "host",
              "props": Object {
                "children": "delete_(Map)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "delete_(Map)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "0695ef13-15ed-4e5d-8ef5-4f398dcc0643",
              "nodeType": "host",
              "props": Object {
                "children": "delete_(Set)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "delete_(Set)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "1b3659aa-1ccf-40ed-bf84-6692a3dfb270",
              "nodeType": "host",
              "props": Object {
                "children": "division",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "division",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "171e2e3c-96a6-48ac-9e94-64912b871448",
              "nodeType": "host",
              "props": Object {
                "children": "endsWith",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "endsWith",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "6b8cb692-3f3b-4516-91a5-748ba2727b92",
              "nodeType": "host",
              "props": Object {
                "children": "entries",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "entries",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "ba5e70a6-474c-47bb-817b-47924b2e0147",
              "nodeType": "host",
              "props": Object {
                "children": "every",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "every",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "97d91646-4dd9-47eb-b71c-2156fdbb177e",
              "nodeType": "host",
              "props": Object {
                "children": "exponentiation",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "exponentiation",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "ffcfaab9-0318-40f3-b17b-576e1fd01a06",
              "nodeType": "host",
              "props": Object {
                "children": "fill",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "fill",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "4df558e0-f034-408f-8fd6-8ab39d136f94",
              "nodeType": "host",
              "props": Object {
                "children": "filter",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "filter",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "87aabe7b-26df-4516-8fa6-542d0c49462a",
              "nodeType": "host",
              "props": Object {
                "children": "find",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "find",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "7ecaf538-3d93-48b2-84e1-573dd4ea2a83",
              "nodeType": "host",
              "props": Object {
                "children": "findIndex",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "findIndex",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "0870d7d4-3904-4b69-937d-762610764d88",
              "nodeType": "host",
              "props": Object {
                "children": "forEach_(Array)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "forEach_(Array)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "cf19744c-3121-414f-865e-f2a8ea9253ef",
              "nodeType": "host",
              "props": Object {
                "children": "forEach_(Map)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "forEach_(Map)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "83c351a5-aa2e-4e47-a7fc-6fb2a8c2158e",
              "nodeType": "host",
              "props": Object {
                "children": "from",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "from",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "6e248200-d6ab-48b3-bc90-30d98580de5b",
              "nodeType": "host",
              "props": Object {
                "children": "fromCharCode",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "fromCharCode",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "f017ced3-56ca-48c3-ad84-0457ab1511b0",
              "nodeType": "host",
              "props": Object {
                "children": "fromCodePoint",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "fromCodePoint",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "b66ba086-ae07-49f0-bbcc-ed8788010112",
              "nodeType": "host",
              "props": Object {
                "children": "get",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "get",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "1734a588-7408-4d6f-b847-b147c18839cf",
              "nodeType": "host",
              "props": Object {
                "children": "has_(Map)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "has_(Map)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "d699da06-9226-405e-abbc-50d71a680b5c",
              "nodeType": "host",
              "props": Object {
                "children": "has_(Set)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "has_(Set)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "37eb2e75-42ec-4590-9ef5-ec16bd0c3e98",
              "nodeType": "host",
              "props": Object {
                "children": "includes_(Array)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "includes_(Array)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "ca051c45-99bd-475f-8e7b-6d4d3810704b",
              "nodeType": "host",
              "props": Object {
                "children": "includes_(String)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "includes_(String)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "8d4644d4-6874-4a25-b8b1-458ab8b7db36",
              "nodeType": "host",
              "props": Object {
                "children": "increment(++)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "increment(++)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "0eda8996-dffd-4a9f-b07d-12991c0986d5",
              "nodeType": "host",
              "props": Object {
                "children": "indexOf_(Array)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "indexOf_(Array)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "453efdba-072d-4675-afd3-ba97f1f3da66",
              "nodeType": "host",
              "props": Object {
                "children": "indexOf_(String)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "indexOf_(String)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "c4e8886a-4287-45c4-85f7-edb5ce10da84",
              "nodeType": "host",
              "props": Object {
                "children": "isArray",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "isArray",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "2a9175d3-9a21-42f5-9473-3d2f5b9c3f92",
              "nodeType": "host",
              "props": Object {
                "children": "isFinite",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "isFinite",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "92e6f078-f147-4f48-915c-7ff50db8a3de",
              "nodeType": "host",
              "props": Object {
                "children": "isInteger",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "isInteger",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "5206cccb-9b59-4eb9-b4af-b84a40867c05",
              "nodeType": "host",
              "props": Object {
                "children": "isNan",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "isNan",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "eea8e36d-d93f-4711-96f9-b8c4b5badeec",
              "nodeType": "host",
              "props": Object {
                "children": "isSafeInteger",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "isSafeInteger",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "aded4ca6-78ec-4752-8416-3bcba09f8e20",
              "nodeType": "host",
              "props": Object {
                "children": "join",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "join",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "9842b47c-7312-4877-a490-ff565447893b",
              "nodeType": "host",
              "props": Object {
                "children": "keys",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "keys",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "aa1c3d8f-90e2-4032-b01d-00f70c781da2",
              "nodeType": "host",
              "props": Object {
                "children": "lastIndexOf_(Array)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "lastIndexOf_(Array)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "a78140e2-24a5-4e88-8901-b186278ec9c7",
              "nodeType": "host",
              "props": Object {
                "children": "lastIndexOf_(String)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "lastIndexOf_(String)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "ae649506-2884-44b7-b98b-db0816d4ef0b",
              "nodeType": "host",
              "props": Object {
                "children": "let",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "let",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "7f2842cf-285b-43dc-99cf-f74350780e6d",
              "nodeType": "host",
              "props": Object {
                "children": "map",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "map",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "f5533bab-03a6-4363-8f28-dbfd0055e59e",
              "nodeType": "host",
              "props": Object {
                "children": "match",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "match",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "a3fa17ea-12dd-4ed0-9cec-9dca01e56070",
              "nodeType": "host",
              "props": Object {
                "children": "multiplicaton",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "multiplicaton",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "5dca79b7-c0a2-4d7c-bb9b-852079bb1e5c",
              "nodeType": "host",
              "props": Object {
                "children": "null",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "null",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "66a1dc92-d498-48d2-be53-7a76174a587d",
              "nodeType": "host",
              "props": Object {
                "children": "number",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "number",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "097d3e22-0c88-4794-8b12-27b7a2e65315",
              "nodeType": "host",
              "props": Object {
                "children": "object",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "object",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "d1636a69-a30a-4a99-ad45-15f38f76683d",
              "nodeType": "host",
              "props": Object {
                "children": "padEnd",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "padEnd",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "6269a2f9-5bb8-4b0a-b4df-5077e67e462a",
              "nodeType": "host",
              "props": Object {
                "children": "padStart",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "padStart",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "8ad07791-78b3-449f-9027-ef78b150d3fe",
              "nodeType": "host",
              "props": Object {
                "children": "parseFloat",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "parseFloat",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "11069f2b-acc3-4aef-a257-778d4a5bf789",
              "nodeType": "host",
              "props": Object {
                "children": "parseInt",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "parseInt",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "35afd176-0990-4a20-8ca5-9499e06de00f",
              "nodeType": "host",
              "props": Object {
                "children": "pop",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "pop",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "fbd228c5-7d86-4a2e-ba25-e943303f0350",
              "nodeType": "host",
              "props": Object {
                "children": "push",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "push",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "1e173fe5-42f7-41a5-9975-26f0c3751d6c",
              "nodeType": "host",
              "props": Object {
                "children": "reduce",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "reduce",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "990443ae-f6dd-460c-ac0e-c862415dcd03",
              "nodeType": "host",
              "props": Object {
                "children": "reduceRight",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "reduceRight",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "340fb0f4-0e11-46c6-8bcf-d247798bd948",
              "nodeType": "host",
              "props": Object {
                "children": "remainder(%)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "remainder(%)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "f6303118-e6fa-4939-9f19-872b721db2f8",
              "nodeType": "host",
              "props": Object {
                "children": "repeat",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "repeat",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "0021534d-e31f-4cc0-a51b-d85fd2cbedaf",
              "nodeType": "host",
              "props": Object {
                "children": "replace",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "replace",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "28897f02-64f3-4f05-9714-5194605d367c",
              "nodeType": "host",
              "props": Object {
                "children": "reverse",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "reverse",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "fe5709da-ad79-475e-92d6-75791989dc55",
              "nodeType": "host",
              "props": Object {
                "children": "search",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "search",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "8432a869-0b06-4b1a-9171-ebf0d4e66827",
              "nodeType": "host",
              "props": Object {
                "children": "set",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "set",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "5f74bbbc-ddb4-4e24-97b8-76f14ffaf9b9",
              "nodeType": "host",
              "props": Object {
                "children": "shift",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "shift",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "3ca8f481-c365-4c42-abb5-9c56985092d0",
              "nodeType": "host",
              "props": Object {
                "children": "size",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "size",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "5c728209-0248-45d4-b504-54198c2c53de",
              "nodeType": "host",
              "props": Object {
                "children": "slice_(Array)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "slice_(Array)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "66e5a098-fd6b-4c82-b765-b26f46936337",
              "nodeType": "host",
              "props": Object {
                "children": "slice_(String)",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "slice_(String)",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "f127b325-043c-406e-82bd-3a65cb713973",
              "nodeType": "host",
              "props": Object {
                "children": "some",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "some",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "5b6fee9f-c640-4721-856b-00b96eeecab0",
              "nodeType": "host",
              "props": Object {
                "children": "sort",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "sort",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "cc0794bc-d7a0-48b7-af06-0eae5f73daf1",
              "nodeType": "host",
              "props": Object {
                "children": "splice",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "splice",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "0711c358-3635-416c-bf28-0572419bd780",
              "nodeType": "host",
              "props": Object {
                "children": "split",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "split",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "8fdf5cb3-ba34-4456-8c16-e9ad850f248a",
              "nodeType": "host",
              "props": Object {
                "children": "startsWith",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "startsWith",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "c39d368d-908e-4f34-a96d-bc32031fefe3",
              "nodeType": "host",
              "props": Object {
                "children": "string",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "string",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "a78f2e35-6931-40af-a670-142dffbd7f55",
              "nodeType": "host",
              "props": Object {
                "children": "substring",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "substring",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "503d12ee-b877-453f-bb49-542e46b5692e",
              "nodeType": "host",
              "props": Object {
                "children": "subtraction",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "subtraction",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "a25e1bd6-6757-4b24-944a-c01e047e1f5e",
              "nodeType": "host",
              "props": Object {
                "children": "symbol",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "symbol",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "40765c72-f962-46ab-b351-6ab14f2dc677",
              "nodeType": "host",
              "props": Object {
                "children": "toExponential",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "toExponential",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "dbeb908e-78ac-48cc-9e29-9eb23dd0e6bb",
              "nodeType": "host",
              "props": Object {
                "children": "toFixed",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "toFixed",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "2e5223f1-4e55-4f1d-92b1-66a105d9ee9b",
              "nodeType": "host",
              "props": Object {
                "children": "trim",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "trim",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "47111d3e-df55-40af-bd55-2ad4372a26ee",
              "nodeType": "host",
              "props": Object {
                "children": "unary_negation",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "unary_negation",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "bd885f68-9b66-48dc-9c29-3c8ccd6bd04a",
              "nodeType": "host",
              "props": Object {
                "children": "unary_plus",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "unary_plus",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "bbf6b5c6-6cba-4696-86ba-21f13b7d8aa1",
              "nodeType": "host",
              "props": Object {
                "children": "undefined",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "undefined",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "1183587f-15f6-4f12-b2b0-7f166dfb08fe",
              "nodeType": "host",
              "props": Object {
                "children": "unshift",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "unshift",
              "type": "li",
            },
            Object {
              "instance": null,
              "key": "bf8c818d-cd9c-4fb1-b50c-47a358c0fc6d",
              "nodeType": "host",
              "props": Object {
                "children": "values",
                "className": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "values",
              "type": "li",
            },
          ],
          "type": "ul",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
